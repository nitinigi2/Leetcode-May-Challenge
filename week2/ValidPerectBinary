// Question link: https://leetcode.com/explore/challenge/card/may-leetcoding-challenge/535/week-2-may-8th-may-14th/3324/


class Solution {
    public static boolean isPerfectSquare(int n) {
        int l=1, r=n;
        if(r==l) return true;
        return searchBinary(l, r, n);
    }
    public static boolean searchBinary(long l, long r, int n){
        if (l > r) {
            return false;
        }
        long mid=l+(r-l)/2;
        //  System.out.println(l + " " + r + " " + mid + " " +n);
        if(mid*mid == n) return true;
        else if(mid*mid>n) return searchBinary(l, mid-1, n);
        else return searchBinary(mid+1, r, n);
    }
}
